generator client {
  provider = "prisma-client-py"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}


// ! Users       =============================================================================

model Users {
  id                String         @id @default(auto()) @map("_id") @db.ObjectId

  firstName         String
  lastName          String
  email             String          @unique
  role              Roles
  avatar            String?
  password          String

  city              String
  state             String
  zipCode           Int

  createdAt         DateTime
  updatedAt         DateTime
  reviews           Reviews[]

  // One-to-m
  notifications     Notifications[]

  // m-to-n
  childIDs String[]   @db.ObjectId
  children  Children[]   @relation(fields: [childIDs], references: [id])
}

enum Roles {
  parent
  moderator
}

model Notifications {
  id                    String  @id @default(auto()) @map("_id") @db.ObjectId
  description           String
  user   Users   @relation(fields: [userId], references: [id])
  userId String @db.ObjectId
}


model Children {
  id                    String  @id @default(auto()) @map("_id") @db.ObjectId
  firstName             String
  lastName              String
  homeschool            Boolean
  age                   Int

  parentIDs String[] @db.ObjectId
  parents   Users[]   @relation(fields: [parentIDs], references: [id])

  activityIDs String[]   @db.ObjectId
  activities  Activities [] @relation(fields: [activityIDs], references: [id])
}

// ! Activities     =============================================================================

model Activities {
  id            String      @id @default(auto()) @map("_id") @db.ObjectId
  name          String
  description   String

  events        Events[]
  reviews       Reviews[]

  childIDs String[] @db.ObjectId
  child   Children[]   @relation(fields: [childIDs], references: [id])
}

// ! Events         =============================================================================

model Events {
    id          String      @id @default(auto()) @map("_id") @db.ObjectId

    activity    Activities   @relation(fields: [activityId], references: [id])
    activityId  String      @db.ObjectId

    reviews     Reviews[]
}

// ! reviews        =============================================================================

model Reviews {
    id          String      @id @default(auto()) @map("_id") @db.ObjectId
    rating      Int

    event       Events       @relation(fields: [eventId], references: [id])
    eventId     String      @db.ObjectId

    activity    Activities    @relation(fields: [activityId], references: [id])
    activityId  String      @db.ObjectId

    parent      Users        @relation(fields: [parentId], references: [id])
    parentId    String      @db.ObjectId
}
